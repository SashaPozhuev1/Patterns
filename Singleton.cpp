//    Одиночка — это порождающий паттерн проектирования, который гарантирует,
//что у класса есть только один экземпляр, и предоставляет к нему глобальную точку доступа.
//1)  Гарантирует наличие единственного экземпляра класса. 
//Чаще всего это полезно для доступа к какому-то общему ресурсу, например, базе данных.
//2)  Предоставляет глобальную точку доступа. Это не просто глобальная переменная, 
//через которую можно достучаться к определённому объекту. Глобальные переменные не защищены от записи, 
//поэтому любой код может подменять их значения без вашего ведома.

class OneObject
{
private:        
        OneObject(){};
        OneObject(OneObject const & root) = delete;
        OneObject & operator=(OneObject const &) = delete;
public:
        static OneObject & SetSingleObject() {                   
                static OneObject SingleObject;
                return SingleObject;
        }
};
